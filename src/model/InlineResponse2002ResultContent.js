/**
 * ap-challenge-microservice
 * Services that provide access and interaction with all sorts of challenges, including design, dev, single round matches, and marathon matches. 
 *
 * OpenAPI spec version: 1.0.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApChallengeMicroservice) {
      root.ApChallengeMicroservice = {};
    }
    root.ApChallengeMicroservice.InlineResponse2002ResultContent = factory(root.ApChallengeMicroservice.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The InlineResponse2002ResultContent model module.
   * @module model/InlineResponse2002ResultContent
   * @version 1.0.5
   */

  /**
   * Constructs a new <code>InlineResponse2002ResultContent</code>.
   * @alias module:model/InlineResponse2002ResultContent
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>InlineResponse2002ResultContent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2002ResultContent} obj Optional instance to populate.
   * @return {module:model/InlineResponse2002ResultContent} The populated <code>InlineResponse2002ResultContent</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('phaseType')) {
        obj['phaseType'] = ApiClient.convertToType(data['phaseType'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('fixedStarTime')) {
        obj['fixedStarTime'] = ApiClient.convertToType(data['fixedStarTime'], 'Date');
      }
      if (data.hasOwnProperty('scheduledStarTime')) {
        obj['scheduledStarTime'] = ApiClient.convertToType(data['scheduledStarTime'], 'Date');
      }
      if (data.hasOwnProperty('scheduledEndTime')) {
        obj['scheduledEndTime'] = ApiClient.convertToType(data['scheduledEndTime'], 'Date');
      }
      if (data.hasOwnProperty('actualStartTime')) {
        obj['actualStartTime'] = ApiClient.convertToType(data['actualStartTime'], 'Date');
      }
      if (data.hasOwnProperty('actualEndTime')) {
        obj['actualEndTime'] = ApiClient.convertToType(data['actualEndTime'], 'Date');
      }
      if (data.hasOwnProperty('duration')) {
        obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
      }
    }
    return obj;
  }

  /**
   * the phase type
   * @member {module:model/InlineResponse2002ResultContent.PhaseTypeEnum} phaseType
   */
  exports.prototype['phaseType'] = undefined;
  /**
   * the status
   * @member {module:model/InlineResponse2002ResultContent.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * fixed start time ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)
   * @member {Date} fixedStarTime
   */
  exports.prototype['fixedStarTime'] = undefined;
  /**
   * the scheduled start time ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)
   * @member {Date} scheduledStarTime
   */
  exports.prototype['scheduledStarTime'] = undefined;
  /**
   * the scheduled end time ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)
   * @member {Date} scheduledEndTime
   */
  exports.prototype['scheduledEndTime'] = undefined;
  /**
   * the actual start time ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)
   * @member {Date} actualStartTime
   */
  exports.prototype['actualStartTime'] = undefined;
  /**
   * the actual end time ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)
   * @member {Date} actualEndTime
   */
  exports.prototype['actualEndTime'] = undefined;
  /**
   * the duration
   * @member {String} duration
   */
  exports.prototype['duration'] = undefined;


  /**
   * Allowed values for the <code>phaseType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PhaseTypeEnum = {
    /**
     * value: "Registration"
     * @const
     */
    "Registration": "Registration",
    /**
     * value: "Submission"
     * @const
     */
    "Submission": "Submission",
    /**
     * value: "Screening"
     * @const
     */
    "Screening": "Screening",
    /**
     * value: "Review"
     * @const
     */
    "Review": "Review",
    /**
     * value: "Appeals"
     * @const
     */
    "Appeals": "Appeals",
    /**
     * value: "Appeals Response"
     * @const
     */
    "Appeals Response": "Appeals Response",
    /**
     * value: "Aggregation"
     * @const
     */
    "Aggregation": "Aggregation",
    /**
     * value: "Aggregation Review"
     * @const
     */
    "Aggregation Review": "Aggregation Review",
    /**
     * value: "Final Fix"
     * @const
     */
    "Final Fix": "Final Fix",
    /**
     * value: "Final Review"
     * @const
     */
    "Final Review": "Final Review",
    /**
     * value: "Approval"
     * @const
     */
    "Approval": "Approval",
    /**
     * value: "Post-Mortem"
     * @const
     */
    "Post-Mortem": "Post-Mortem",
    /**
     * value: "Specification Submission"
     * @const
     */
    "Specification Submission": "Specification Submission",
    /**
     * value: "Specification Review"
     * @const
     */
    "Specification Review": "Specification Review",
    /**
     * value: "Checkpoint Submission"
     * @const
     */
    "Checkpoint Submission": "Checkpoint Submission",
    /**
     * value: "Checkpoint Screening"
     * @const
     */
    "Checkpoint Screening": "Checkpoint Screening",
    /**
     * value: "Checkpoint Review"
     * @const
     */
    "Checkpoint Review": "Checkpoint Review",
    /**
     * value: "Iterative Review"
     * @const
     */
    "Iterative Review": "Iterative Review"  };

  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Scheduled"
     * @const
     */
    "Scheduled": "Scheduled",
    /**
     * value: "Open"
     * @const
     */
    "Open": "Open",
    /**
     * value: "Closed"
     * @const
     */
    "Closed": "Closed"  };


  return exports;
}));


